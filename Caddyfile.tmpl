{{ define "proxy_to" }}{{ if .Address }}{{ if and .Container.Node.ID .Address.HostPort }}{{ .Container.Node.Address.IP }}:{{ .Address.HostPort }}{{ else }}{{ .Address.IP }}:{{ .Address.Port }}{{ end }}{{ else }}{{ .Container.IP }}{{ end }}{{ end }}

{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}

{{ $host }} {
    tls {{ $.Env.LETSENCRYPT_EMAIL }}

    proxy / {{ range $container := $containers }}{{ $addrLen := len $container.Addresses }}{{ if eq $addrLen 1 }}{{ $address := index $container.Addresses 0 }}{{ template "proxy_to" (dict "Container" $container "Address" $address) }}{{ else }}{{ $port := coalesce $container.Env.VIRTUAL_PORT "80" }}{{ $address := where $container.Addresses "Port" $port | first }}{{ template "proxy_to" (dict "Container" $container "Address" $address) }}{{ end }} {{ end }} {
        header_upstream Host {host}
        header_upstream X-Real-IP {remote}
        header_upstream X-Forwarded-For {remote}
        header_upstream X-Forwarded-Proto {scheme}
    }
    
    log stdout
}

{{ end }}
